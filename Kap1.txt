Hallo Conway Folge
Ergänzen Sie die nächste Zeile:
0
10
1110
3110
132110
1113122110
...
na? Wissen Sie's? Kommen Sie drauf OHNE Vorkenntnisse? Das wäre m.E. unglaublich, aber sobald Sie die nächste Zeile ergänzen können,
haben Sie eine wichtige Erkenntnis erlangt.
Eine Zahl kann als Symbol gewertet werden, also verhältnismäßig wenig Information enthalten, oder die Interpretation einer Zählung beinhalten.
Sprich: die Information "Anzahl" beinhalten.
So wäre z.B. die Folge
#
1#
ein Symbol (#) und die Zählung des Symbols (1).
In der nächsten Zeile würde 1 wieder als Symbol gezählt:
11 konkarteniert mit 1#: 111#,
so dass die nächste Zeile 311# - 3 Einsen zählt und 1 #.
Das Symbol ist nur schwer von der Zählung zu unterscheiden.

Hallo Register
Stellen Sie sich vor, Sie wollen die Zahlen speichern. Dazu gibt es aus der Physik brauchbare Vorschläge:
z.B. lädt man eine Batterie. Wenn die Batterie voll ist, entspricht das dem Zustand 1; wenn sie leer ist dem Zustand 0.
Eine Batterie ist mglw. sehr klein und billig (Tendenz: kleiner und billiger), so dass Sie unzählige Zustände 0 oder 1 
abbilden können. 

Hallo Binärsystem
Sie wollen jetzt die Zahl 5 speichern. Dazu brauchen Sie eine Übersetzung zwischen Binärsystem und Dezimalsystem.
Das ist einfach: die erste Batterie zählt von 0 auf 1, die zweite zählt 2, wobei man die 1 der ersten Batterie ggf. addiert für 3.
Die dritte 4; für 5 addiert man dazu eine 1 ersten Batterie.
Die Batterien heißen Bits in der echten Welt. Mit 3 Bits lassen sich die Zahlen 0 bis 7 wie folgt darstellen:
b_1 * 2^0 + b_2 * 2^1 + b_3 * 2^2 mit b_1 = 1, b_3 = 1, b_2 = 0
Wenn man weitere Bits hat, inkrementiert man die Exponenten der Zahl 2. Ergibt Summe über n=0 bis unendlich, b_n+1 * 2^n.

Hallo Hexadezimalsystem
Die Bitschreibweise nicht sehr übersichtlich ist, nutzen wir geeignete Methoden, Bits zusammenzufassen. Wir nehmen immer Blöcke von 4 Bits,
die also Dezimalzahlen von 0 bis 15 darstellen können und schreiben dafür 0 bis F it der Bedeutung:
0 bis 9 bedeuten Belegungen des Bits wie sie die Dezimalzahl ergeben und A bis F für die Werte 10 bis 15. Damit können wir die Belegung von 
4 Bits in einem Zeichen (hier: einstellige Zahl oder einer der Buchstaben A-F) darstellen. 

Hallo Datentypen
Wir können also Zahlen im Binärsystem mittels Register speichern. Wir können diese Zahlen als Buchstaben interpretieren.
Eine Sammlung von Buchstaben nennen wir String. Das ist ein Datentyp und es bleibt derselbe Datentyp, selbst wenn keine Elemente der Menge Buchstaben darin sind.
Dies ist der leere String "".

Hallo Integer
Wir wissen, wie wir Dezimalzahlen in Bits speichern können. Typischerweise speichert man ganzzahlige Werte im Datentyp Integer. Dieser Datentyp fasst in meist 32
Bit Werte bis +- 2.147.483.647.

Hallo Gleitkommazahlen
Für unseren Komfort definieren wir Kommazahlen hinzu. Man definiert z.B. einen Bereich für eine Ganzzahl wie beim Datentyp Integer. Dazu legt man einen Bereich
fest, für den Faktor *10^$exponent und $exponent kann halt negativ sein. In Echt nimmt man die Basis 2, aber die Basis 10 kann dasselbe Prinzip verdeutlichen.
Extrem schwierig ist es dabei z.B. den Wert 0.2 exakt darzustellen.

Hallo Schriftart
Wenn wir wissen, welches Zeichen wir darstellen wollen, wissen wir immer noch nicht, wie wir es zeichenen sollen - kaligraphisch.
Dafür gibt es Fonts (dt. Schriftarten). Bsp: Consolas, Roman New Times, Arial Narrow. Schriftarten kann man selbst definieren //TODO Projekt einfügen (?)
gerne verwendet man und frau für Webseiten auch Google Fonts. https://fonts.google.com 

Hallo Logik Gatter
Mit einem Logik Gatter kann man semantische Schlußfolgerungen aus der Belegung einzelner Bits erzielen. Dabei dienen Relationen als
Abbildung von Eingabebits auf Ausgabebits. Die elementaren Realtionen sind OR, XOR, AND und NAND. Seien a und b Eingabebits und c ein Ausgabebit,
dann bilden AND die Belegung a=1, b=1 auf c=1 ab. OR bildet a=1 oder b=1 auf 1 ab, XOR ebenfalls, aber exklusiv - d.h. nur wenn 1 Bit aus a,b = 0 ist wird auf 1 abgebildet.
NAND ist die Verneinung von AND, heißt: nur die Belegung a=0, b=0 wird auf c=1 abgebildet.

Hallo Instruktionen
Nehmen wir Register einer bestimmten Anzahl x und speichern darin Werte des Datentyps y. Um diese Werte zu verändern definieren wir elementare Instruktionen.
Instruktionen befähigen uns, Werte miteinander zu vergleichen und zu verändern. TODO bis Assembler

Hallo InstructionSet
Man kann aus den elementaren Logikschaltungen folgende höhere Methoden konstruieren:
Addition, Multiplikation